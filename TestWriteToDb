<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Supabase Connection Diagnostic</title>
  <script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2"></script>
</head>
<body>
  <h1>Supabase Connection Diagnostic</h1>
  <div id="output" style="white-space: pre-wrap; font-family: monospace;"></div>

  <script>
    function log(message) {
      const output = document.getElementById('output');
      output.textContent += message + '\n';
      console.log(message);
    }

    async function diagnoseSupabase() {
      const supabaseUrl = 'https://kcdlbqotmuyyqvzzbxcn.supabase.co';
      const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImtjZGxicW90bXV5eXF2enpieGNuIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQzOTY3MjUsImV4cCI6MjA2OTk3MjcyNX0.jn1qV-Hz_z8pDVlQiR20Kwv_12BDL_z9rcHZvdbdahw';

      log('Starting Supabase Diagnostic...');
      log(`Supabase URL: ${supabaseUrl}`);
      
      try {
        // Explicit client creation using the library's method
        const { createClient } = window.supabase;
        
        if (typeof createClient !== 'function') {
          throw new Error('createClient is not a function');
        }

        log('✓ Supabase createClient method found');

        const supabase = createClient(supabaseUrl, supabaseAnonKey, {
          auth: {
            persistSession: false
          }
        });

        log('✓ Supabase client created successfully');

        // Verify the client has the 'from' method
        if (typeof supabase.from !== 'function') {
          throw new Error('supabase.from is not a function');
        }

        log('✓ Supabase client methods verified');

        // Test database connection
        const { data, error } = await supabase
          .from('notes')
          .select('*')
          .limit(1);

        if (error) {
          log('✗ Database read error:');
          log(JSON.stringify(error, null, 2));
        } else {
          log('✓ Successfully read from database');
          log(`Records found: ${data.length}`);
        }

      } catch (err) {
        log('✗ Diagnostic failed:');
        log(err.message);
        log(JSON.stringify(err, null, 2));
      }
    }

    document.addEventListener('DOMContentLoaded', diagnoseSupabase);


Let author_id = '0023236b-58d7-4c41-ba0f-45a7efc31847';
Let content = 'This is an attempt to write to the db from a TestWriteToDb.html'

 try {
    const { data, error } = await supabase
      .from('notes')
      .insert([
        {
          author_id: authorId,
          audience_id: null,
          reply_to_id: null,
          title: title,
          content: noteContent,
          status: null
        }
      ]);

    if (error) {
      console.error('Insert error:', error);
      alert('❌ Failed to save note. See console for details.');
    } else {
      alert('✅ Note successfully saved to database');
      console.log('Insert response:', data);
    }
  } catch (err) {
    console.error('Unexpected insert error:', err);
    alert('⚠️ Something went wrong saving the note');
  }
});




  </script>
</body>
</html>






